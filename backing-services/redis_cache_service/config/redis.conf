# Redis 7.4 configuration file for Docker Alpine
# Optimized for security, performance, and resource utilization

################################## NETWORK #####################################

# By default, if no "bind" configuration directive is specified, Redis listens
# for connections from all available network interfaces. For Docker, bind to
# 0.0.0.0 to allow connections from other containers
bind 0.0.0.0

# Accept connections on the specified port, default is 6379
# port 6379

# Close connection after client is idle for N seconds (0 = disabled)
timeout 300

# TCP keepalive: If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients (prevents timeout)
tcp-keepalive 60

# TCP backlog settings
tcp-backlog 511

# TCP nodelay option - removed as it's causing compatibility issues in Redis 7.4.3
# The tcp-nodelay option has syntax issues in this version

# Set maximum simultaneous client connections
maxclients 10000

# Specify the server verbosity level
loglevel notice

# Specify the log file name. Empty string means log to stdout (good for Docker)
logfile ""

# Enable protected mode - Redis will only respond on specified interfaces
protected-mode yes

################################# SECURITY ####################################

# Require clients to issue AUTH <PASSWORD> before processing any other commands
# Use a strong password in production
requirepass changeme

# Enable ACL (Access Control Lists) for more granular access control
acllog-max-len 128

# Disable or rename potentially dangerous commands
rename-command FLUSHALL ""
rename-command FLUSHDB ""
rename-command CONFIG ""
rename-command SHUTDOWN ""
rename-command BGSAVE ""
rename-command DEBUG ""

################################ MEMORY MANAGEMENT ############################

# Set a memory usage limit (adjust based on container limits)
# For Docker, set this ~30% below your container memory limit
maxmemory 2gb

# Memory policy: how Redis will select what to remove when maxmemory is reached
# volatile-lru = remove an LRU key among keys with an expire set
# allkeys-lru = remove any key according to LRU
# volatile-lfu = remove an LFU key among keys with an expire set
# allkeys-lfu = remove any key according to LFU
# volatile-random = remove a random key among keys with an expire set
# allkeys-random = remove a random key
# volatile-ttl = remove a key with nearest expire time
# noeviction = don't remove anything, return error
maxmemory-policy volatile-lru

# LRU, LFU and minimal TTL algorithms sample size
maxmemory-samples 5

# Enable active memory defragmentation (Redis 4.0+)
activedefrag yes
active-defrag-ignore-bytes 100mb
active-defrag-threshold-lower 10
active-defrag-threshold-upper 100
active-defrag-cycle-min 25
active-defrag-cycle-max 75

################################ PERFORMANCE TUNING ##########################

# I/O threads configuration for Redis 7.4
# Note: Redis 7.4 has I/O threading but not the enhanced implementation from 8.0
# These settings enable I/O threading for reads
io-threads 4
io-threads-do-reads yes

# Disable massive key scanning operations
# Redis will launch an error on commands using KEYS
rename-command KEYS ""

# Enable lazy freeing for better performance
lazyfree-lazy-eviction yes
lazyfree-lazy-expire yes
lazyfree-lazy-server-del yes
replica-lazy-flush yes

# SLOWLOG settings
slowlog-log-slower-than 10000
slowlog-max-len 128

# Hash table scan aggressiveness
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# Set list compression threshold
list-max-ziplist-size -2

# Set set compression threshold
set-max-intset-entries 512

# Set sorted set compression threshold
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

################################## PERSISTENCE ###############################

# Enable RDB persistence
save 900 1
save 300 10
save 60 10000

# RDB filename
dbfilename dump.rdb

# Working directory
dir /data

# Enable AOF (Append Only File) for data durability
appendonly yes
appendfilename "appendonly.aof"

# fsync policy (always, everysec, no)
# 'everysec' provides a good balance between performance and durability
appendfsync everysec

# Disable AOF rewrite during BGSAVE
no-appendfsync-on-rewrite no

# Auto-trigger AOF rewrite when AOF grows by X%
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

################################## REDIS CLUSTER #############################

# Redis Cluster (disabled by default, enable if needed)
cluster-enabled no
#cluster-config-file nodes.conf
#cluster-node-timeout 5000

################################## CLIENT BUFFERS ###########################

# Client output buffer limits
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

################################## TLS ######################################

# Uncomment to enable TLS
# tls-port 6380
# tls-cert-file /path/to/redis.crt
# tls-key-file /path/to/redis.key
# tls-ca-cert-file /path/to/ca.crt
# tls-auth-clients yes
# tls-replication yes
# tls-cluster yes

################################ MONITORING #################################

# Enable monitoring tools to track Redis performance
# (latency monitor, memory stats, etc.)
latency-monitor-threshold 100

################################ KERNEL OVERCOMMIT ########################

# When running Redis in a Docker container, 
# the container runtime handles resource allocation,
# but it's still good practice to include these settings
# To fix MEMORY USAGE WARNING, you typically need to run Docker with:
# --sysctl net.core.somaxconn=511 --sysctl vm.overcommit_memory=1

################################ MODULES ####################################

# Do not load problematic modules by default
# If you need specific modules, add them here after testing compatibility
# loadmodule /path/to/module.so

################################ DOCKER-SPECIFIC SETTINGS #################

# Disable saving if mounting from a persistent volume
# Uncomment the line below if you are using persistent storage
# save ""

# Disable RDB persistence if using AOF persistence only
# Uncomment if using AOF only
# save ""

################################ ADVANCED CONFIG ###########################

# Disable background saving for containers (uncomment if needed)
# Redis will stop responding during background save if CPU/RAM limited
# save ""

# Additional settings can be added based on specific requirements

################################ END OF CONFIGURATION ####################